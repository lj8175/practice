// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 2.1.5.7 by WSRD Tencent.
// Generated from `/usr/local/resin_system.mqq.com/webapps/communication/taf/upload/joelliu/tpns.jce'
// **********************************************************************

package TPNS_PUSH_PROTOCOL;

public final class TpnsConfigRsp extends com.qq.taf.jce.JceStruct implements java.lang.Cloneable
{
    public String className()
    {
        return "TPNS_PUSH_PROTOCOL.TpnsConfigRsp";
    }

    public String fullClassName()
    {
        return "TPNS_PUSH_PROTOCOL.TpnsConfigRsp";
    }

    public long connectTimeout = 0;

    public long recTimeout = 0;

    public int reConCount = 0;

    public long reConInterval = 0;

    public long heartbeatInterval = 0;

    public long getConnectTimeout()
    {
        return connectTimeout;
    }

    public void  setConnectTimeout(long connectTimeout)
    {
        this.connectTimeout = connectTimeout;
    }

    public long getRecTimeout()
    {
        return recTimeout;
    }

    public void  setRecTimeout(long recTimeout)
    {
        this.recTimeout = recTimeout;
    }

    public int getReConCount()
    {
        return reConCount;
    }

    public void  setReConCount(int reConCount)
    {
        this.reConCount = reConCount;
    }

    public long getReConInterval()
    {
        return reConInterval;
    }

    public void  setReConInterval(long reConInterval)
    {
        this.reConInterval = reConInterval;
    }

    public long getHeartbeatInterval()
    {
        return heartbeatInterval;
    }

    public void  setHeartbeatInterval(long heartbeatInterval)
    {
        this.heartbeatInterval = heartbeatInterval;
    }

    public TpnsConfigRsp()
    {
    }

    public TpnsConfigRsp(long connectTimeout, long recTimeout, int reConCount, long reConInterval, long heartbeatInterval)
    {
        this.connectTimeout = connectTimeout;
        this.recTimeout = recTimeout;
        this.reConCount = reConCount;
        this.reConInterval = reConInterval;
        this.heartbeatInterval = heartbeatInterval;
    }

    public boolean equals(Object o)
    {
        if(o == null)
        {
            return false;
        }

        TpnsConfigRsp t = (TpnsConfigRsp) o;
        return (
            com.qq.taf.jce.JceUtil.equals(connectTimeout, t.connectTimeout) && 
            com.qq.taf.jce.JceUtil.equals(recTimeout, t.recTimeout) && 
            com.qq.taf.jce.JceUtil.equals(reConCount, t.reConCount) && 
            com.qq.taf.jce.JceUtil.equals(reConInterval, t.reConInterval) && 
            com.qq.taf.jce.JceUtil.equals(heartbeatInterval, t.heartbeatInterval) );
    }

    public int hashCode()
    {
        try
        {
            throw new Exception("Need define key first!");
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return 0;
    }
    public java.lang.Object clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void writeTo(com.qq.taf.jce.JceOutputStream _os)
    {
        _os.write(connectTimeout, 0);
        _os.write(recTimeout, 1);
        _os.write(reConCount, 2);
        _os.write(reConInterval, 3);
        _os.write(heartbeatInterval, 4);
    }


    public void readFrom(com.qq.taf.jce.JceInputStream _is)
    {
        this.connectTimeout = (long) _is.read(connectTimeout, 0, false);
        this.recTimeout = (long) _is.read(recTimeout, 1, false);
        this.reConCount = (int) _is.read(reConCount, 2, false);
        this.reConInterval = (long) _is.read(reConInterval, 3, false);
        this.heartbeatInterval = (long) _is.read(heartbeatInterval, 4, false);
    }

    public void display(java.lang.StringBuilder _os, int _level)
    {
        com.qq.taf.jce.JceDisplayer _ds = new com.qq.taf.jce.JceDisplayer(_os, _level);
        _ds.display(connectTimeout, "connectTimeout");
        _ds.display(recTimeout, "recTimeout");
        _ds.display(reConCount, "reConCount");
        _ds.display(reConInterval, "reConInterval");
        _ds.display(heartbeatInterval, "heartbeatInterval");
    }

    public void displaySimple(java.lang.StringBuilder _os, int _level)
    {
        com.qq.taf.jce.JceDisplayer _ds = new com.qq.taf.jce.JceDisplayer(_os, _level);
        _ds.displaySimple(connectTimeout, true);
        _ds.displaySimple(recTimeout, true);
        _ds.displaySimple(reConCount, true);
        _ds.displaySimple(reConInterval, true);
        _ds.displaySimple(heartbeatInterval, false);
    }

}

